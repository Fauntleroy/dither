{
  "version": 3,
  "file": "client.css",
  "sources": [
    "../../_layout.svelte",
    "../../[id].svelte",
    "../../message.svelte",
    "../../new-message.svelte",
    "../../filmstrip.svelte",
    "../../stylized-webcam-feed.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { Route } from 'svelte-router-spa';\n\n\timport Nav from '../components/nav.svelte';\n\n\texport let currentRoute;\n</script>\n\n<style>\n\t@media (prefers-color-scheme: dark) {\n\t\t:global(body) {\n\t\t\tbackground: #1a1a1a;\n\t\t\tcolor: #eee;\n\t\t}\n\t}\n</style>\n\n<Nav />\n\n<main>\n\t<Route {currentRoute} />\n</main>",
    "<script>\n  import { onMount } from 'svelte';\n  \n  import { firestore, firestoreDb } from '../../firebase.js';\n\n  import Message from '../../components/message.svelte';\n  import NewMessage from '../../components/new-message.svelte';\n\n  export let currentRoute;\n  const { namedParams } = currentRoute;\n  const { id } = namedParams;\n\n  let messages = [];\n\n\tonMount(async () => {\n    firestoreDb.collection(`rooms/${id}/messages`)\n      .limit(10)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(function(collection) {\n          console.log(\"Current data: \", collection.docs);\n          const docsData = collection.docs.map((doc) => {\n            return {\n              id: doc.id,\n              ...doc.data()\n            }\n          });\n          console.log('docsData', docsData);\n          messages = docsData;\n      });\n  });\n\n\tasync function handleCreateMessage (event) {\n    const { text, imageDataURL } = event.detail;\n\t\tconst newMessage = await firestoreDb.collection(`rooms/${id}/messages`).add({\n      createdAt: firestore.FieldValue.serverTimestamp(),\n      imageBlob: imageDataURL,\n      text\n    });\n\t}\n</script>\n\n<style>\n  .content {\n    width: 720px;\n    margin: 0 auto;\n  }\n</style>\n\n<svelte:head>\n\t<title>Room {id}</title>\n</svelte:head>\n\n<div class=\"content\">\n  <NewMessage on:createMessage={handleCreateMessage} />\n\n  {#each messages as { id, text, imageBlob }, i (id)}\n    <Message text={text} imageBlob={imageBlob} />\n  {/each}\n</div>",
    "<script>\n  import Filmstrip from './filmstrip.svelte';\n\n  export let imageBlob;\n  export let text;\n</script>\n\n<style>\n  .message {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin-bottom: 10px;\n  }\n\n  .text {\n    margin-top: -10px;\n    padding: 15px 20px;\n    background: black;\n    color: white;\n    border-radius: 3px;\n    z-index: 2;\n  }\n</style>\n\n<div class=\"message\">\n  <Filmstrip src={imageBlob} />\n  <div class=\"text\">{text}</div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  import { generateImage } from '../utils/filmstrip.js';\n\n  import StylizedWebcamFeed from './stylized-webcam-feed.svelte';\n  import Filmstrip from './filmstrip.svelte';\n\n  const dispatch = createEventDispatcher();\n  let webcamFeed;\n  let inputMessage = '';\n  let recording = false;\n\n  async function handleSubmit () {\n    recording = true;\n    const imageDataURL = await generateImage(webcamFeed.canvasElement);\n    recording = false;\n\n    dispatch('createMessage', {\n      text: inputMessage,\n      imageDataURL\n    });\n\n    inputMessage = '';\n  }\n</script>\n\n<style>\n  .form {\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n    justify-content: center;\n  }\n\n  .fake-input {\n    display: flex;\n    background: white;\n    color: black;\n    border: black 4px solid;\n    border-radius: 3px;\n  }\n\n  .input {\n    display: block;\n    border: none;\n    margin: 0;\n    padding: 10px 15px;\n    font-size: inherit;\n  }\n\n  .submit {\n    padding: 10px;\n    margin: 0;\n    color: black;\n    background: none;\n    border: none;\n    font-size: 40px;\n    line-height: 40px;\n    border-radius: 3px;\n  }\n\n  .recording-booth {\n    position: relative;\n  }\n\n  .recording-indicator {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    display: block;\n    border-radius: 50%;\n    background: red;\n    width: 10px;\n    height: 10px;\n  }\n</style>\n\n<div class=\"new-message\">\n  <form class=\"form\" on:submit|preventDefault={handleSubmit}>\n    <div class=\"recording-booth\">\n      <StylizedWebcamFeed bind:this={webcamFeed} />\n      {#if recording}<span class=\"recording-indicator\" />{/if}\n    </div>\n    <div class=\"fake-input\">\n      <input class=\"input\" type=\"text\" bind:value={inputMessage} placeholder=\"Type to GIF\" disabled={recording} />\n      <button class=\"submit\" type=\"submit\" disabled={recording}>âž­</button>\n    </div>\n  </form>\n</div>",
    "<script>\n  import { onMount } from 'svelte';\n\n  export let src;\n</script>\n\n<style>\n  @keyframes play-frames {\n    from {\n      transform: translateY(0%);\n    }\n    to {\n      transform: translateY(-100%);\n    }\n  }\n\n  .filmstrip {\n    width: 300px;\n    height: 225px;\n    overflow: hidden;\n    background: black;\n  }\n\n  .filmstrip .image {\n    animation: play-frames 2000ms steps(20, end) infinite;\n    width: 100%;\n    image-rendering: crisp-edges;\n  }\n</style>\n\n<div class=\"filmstrip\">\n  <img class=\"image\" src={src} alt=\"\" />\n</div>",
    "<svelte:options accessors={true} />\n\n<script>\n  import getUserMedia from 'getusermedia';\n  import attachMediaStream from 'attachmediastream';\n  import Dither from 'canvas-dither';\n  import throttle from 'just-throttle';\n  import { onMount } from 'svelte';\n\n  export let canvasElement;\n  export let videoElement;\n  let processedImageDrawRequestId;\n\n  function drawProcessedImage () {\n    console.log('drawProcessedImage')\n    const canvas2dContext = canvasElement.getContext('2d');\n    canvas2dContext.drawImage(videoElement, 0, 0, videoElement.width, videoElement.height);\n    const canvasImageData = canvas2dContext.getImageData(0, 0, canvasElement.width, canvasElement.height);\n    const filteredImageData = Dither.atkinson(canvasImageData);\n    canvas2dContext.putImageData(filteredImageData, 0, 0);\n  }\n\n  const throttledDrawProcessedImage = throttle(drawProcessedImage, 100, true);\n    \n  function tryToDraw () {\n    throttledDrawProcessedImage();\n\n    processedImageDrawRequestId = requestAnimationFrame(tryToDraw);\n  }\n\n  onMount(() => {\n    getUserMedia({\n      video: true,\n      audio: false\n    }, (error, userMediaStream) => {\n      if (error) {\n        alert(error);\n      } else {\n        attachMediaStream(userMediaStream, videoElement);\n      }\n    });\n\n    processedImageDrawRequestId = requestAnimationFrame(tryToDraw);\n\n    return function onUnMount () {\n      cancelAnimationFrame(processedImageDrawRequestId);\n    }\n  });\n</script>\n\n<style>\n  .raw-webcam {\n    position: fixed;\n    top: -9999px;\n    visibility: hidden;\n  }\n\n  .raw-webcam,\n  .processed-webcam {\n    display: block;\n    width: 200px;\n    height: 150px;\n    image-rendering: crisp-edges;\n    image-rendering: pixelated;\n  }\n\n  .processed-webcam {\n    background: black;\n  }\n</style>\n\n<div class=\"stylized-webcam-feed\">\n  <video class=\"raw-webcam\" width=\"200\" height=\"150\" bind:this={videoElement} />\n  <canvas class=\"processed-webcam\" width=\"200\" height=\"150\" bind:this={canvasElement} />\n</div>"
  ],
  "names": [],
  "mappings": "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"
}